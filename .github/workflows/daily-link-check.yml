name: Daily Link Verification

on:
  schedule:
    # Run daily at 9:00 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  verify-links:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run link verification
      run: |
        python link_verifier.py --verbose
        
    - name: Create issue on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          const title = `ðŸ”— Broken Links Detected on llm-d.ai - ${new Date().toISOString().split('T')[0]}`;
          const body = `
          ## Link Verification Failed
          
          The daily link verification job has detected broken links on https://llm-d.ai.
          
          **Job Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          
          Please check the job logs for details about which links are broken and take appropriate action.
          
          ### Next Steps
          1. Review the job logs to identify broken links
          2. Fix or remove broken links from the website
          3. Close this issue once resolved
          
          ---
          *This issue was automatically created by the daily link verification workflow.*
          `;
          
          // Check if there's already an open issue for today
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: ['broken-links', 'automated']
          });
          
          const today = new Date().toISOString().split('T')[0];
          const existingIssue = issues.data.find(issue => 
            issue.title.includes(today)
          );
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['broken-links', 'automated', 'bug']
            });
          } 